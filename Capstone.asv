clc;
clear;
close all;

% Constants
rho = 1.2; %density of air (kg/m^3) 
Cd = 1.1; %drag coefficient of a flat plate

% Experimental Parameters %
    %Mass Properties%
    M = .45; %kg
    
    %Geometry%
    wDown = .215; %meters; width of a flat plate which would represent projected area of wing on DOWNstroke; very rough guess;  
    wUp = .12; %meters; width of a flat plate which would represent projected area of wing on UPstroke; very rough guess;
    l = .545; %m; length of same flat plate

    % Timing
    deltaT = 0.0001; %[s]; how many subdivisions through time are needed to get a good amount of granularity of the model
    numPoints = 10000; %[unitless]; extra value if preallocated arrays are needed. e.g. what number of points do we know we will not exceed
    flapRate = 5; %[hz]; how many flaps per second the bird is making
    tStar = 0.5*(1/flapRate); %[s]; if wing is flapping at 5 hz it would take this many seconds for one half of the flap
    t = zeros(numPoints,1);
    numFlaps = 0;
    
    % Extra Properties
    W = M*9.81; %Newtons

    % Weight Impulse
    J_W = zeros(numPoints,1);
    J_W_tot =  W*tStar;

    %
    theta = zeros(numPoints,1); %[rad]; angle of wings at a given 't'
    thetaMax = pi()/3; %[radians]; minimum/maximum (depending on how you look at it) angle of wing at top of flat
    thetaMin = -thetaMax; %[radians]; minimum/maximum (depending on how you look at it) angle of wing at the bottom of flap
    thetaDot = zeros(numPoints,1); %[rad/s]=[hz]; rotational speed of wings; we tried a random guess here first
    omega = flapRate*(2*(thetaMax-thetaMin)); %[rad/s]=[hz]; angular velocity twice the total travel of the wings (one full flap down and back) times #flaps per second
    J_flap = zeros(numPoints,1);
    
    Fd = zeros(numPoints,2); %[N]; drag force magnitude at given point in time
    
    % Initial Conditions %
    t(1) = 0; %start at time zero
    theta(1) = thetaMax*cos(2*pi()*omega*t(1)); %assume the flaps begin with wings all the way up (FOR NOW) so if my amplitude scaling makes sense this should be equal to thetaMax
    thetaDot(1) = -2*pi()*omega*sin(2*pi()*omega*t(1));
    Fd(1,1) = (1/6)*Cd*rho*wDown*(l^3)*(cos(theta(1))^3)*thetaDot(1);
    Fd(1,2) = Fd(1,1)*2;
    
    for i=2:numPoints
        t(i) = t(i-1) + deltaT; %step forward in time by one time interval (deltaT)
        theta(i) = cos(2*pi()*omega*t(i)); %calculate theta at this new time
        thetaDot(i) = -2*pi()*omega*sin(2*pi()*omega*t(i)); %calculate thetaDot at this new time
        if thetaDot(i)<0 %when thetaDot is negative, we are in DOWNstroke, so use wDown
            Fd(i,1) = (1/6)*Cd*rho*wDown*(l^3)*(cos(theta(i))^3)*thetaDot(i);
        else %otherwise, thetaDot is positive, thus it is an UPstroke, so use wUp
            Fd(i,1) = (1/6)*Cd*rho*wUp*(l^3)*(cos(theta(i))^3)*thetaDot(i);
        end %if/else
        Fd(i,2) = Fd(i,1)*2; %calculate force generated by both wings
        J_flap(i) = trapz(t(1:i),Fd(1:i,2)); %store value of impulse so far
        J_W(i) = W*t(i); %store value of impulse due to gravity so far
        if t(i) >= tStar
            i_f = i; %store the final index value in case we want to shorten the arrays
            t_f = t(i); %[s] store the final time so we can verify that we reached tStar before exiting
            break
        end %if t(i)
    end %for

%% Plot Results
subplot(3,1,1);    
plot(t(1:i_f),theta(1:i_f));
xlabel('Time t [s]','Interpreter','latex');
ylabel('$\theta(t)$ [rad]','Interpreter','latex');
title('$\theta$ as a Function of Time','Interpreter','latex');
subplot(3,1,2);
plot(t(1:i_f),thetaDot(1:i_f));
xlabel('Time t [s]','Interpreter','latex');
ylabel('$\dot{\theta}(t)$','Interpreter','latex');
title('$\dot{\theta}$ as a Function of Time','Interpreter','latex');
subplot(3,1,3);
plot(t(1:i_f),Fd(1:i_f,2));
xlabel('Time t [s]','Interpreter','latex');
ylabel('$F_{D}(t)$','Interpreter','latex');
title('Total (Both Wings) $F_{D}(t)$ as a Function of Time','Interpreter','latex');

%% Numerically Integrate
J_flap_tot = trapz(t(1:i_f),Fd(1:i_f,2)); %total integral